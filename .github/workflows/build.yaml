name: build-execute

on:
  workflow_call:
    secrets:
      EUMESAT_API_KEY:
        description: 'EUMESAT API Username'
        required: false
      EUMESAT_API_SECRET:
        description: 'EUMESAT API Password'
        required: false
      NASA_EARTHDATA_USER:
        description: 'NASA EARTHDATA API Username'
        required: false
      NASA_EARTHDATA_PWD:
        description: 'NASA EARTHDATA API Password'
        required: false
      QUAY_USERNAME:
        description: 'Username for Quay.io'
        required: false
      QUAY_PASSWORD:
        description: 'Password for Quay.io'
        required: false


jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'eds-book'
    steps:
    - name: Checkout files in repo
      uses: actions/checkout@main

    - name: Fetch myst.yml file
      uses: ndelangen/action-read-yaml@1.1.0
      id: read_action_js
      with:
        config: ${{ github.workspace }}/myst.yml

    - name: Build and push the image to quay.io
      if: contains(github.ref, 'main')
      uses: jupyterhub/repo2docker-action@master
      with:
        # Make sure username & password/token pair matches your registry credentials
        DOCKER_USERNAME: ${{ secrets.QUAY_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        DOCKER_REGISTRY: "quay.io"

        # Uncomment and modify the following line with your image name, otherwise no push will happen
        IMAGE_NAME: edsbook/${{ steps.read_action_js.outputs['project.id'] }}

    - name: Build and push the image to quay.io (preview)
      if: contains(github.ref, 'postprint')
      uses: jupyterhub/repo2docker-action@master
      with:
        # Make sure username & password/token pair matches your registry credentials
        DOCKER_USERNAME: ${{ secrets.QUAY_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        DOCKER_REGISTRY: "quay.io"

        # Uncomment and modify the following line with your image name, otherwise no push will happen
        IMAGE_NAME: edsbook/${{ steps.read_action_js.outputs['project.id'] }}_preview

  execute:
    runs-on: ubuntu-latest
    needs: build
    if: github.repository_owner == 'eds-book'
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout files in repo
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Fetch myst.yml file
        uses: ndelangen/action-read-yaml@1.1.0
        id: read_action_js
        with:
          config: ${{ github.workspace }}/myst.yml
      # Render the notebook
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        env:
          EUMESAT_API_KEY: ${{ secrets.EUMESAT_API_KEY }}
          EUMESAT_API_SECRET: ${{ secrets.EUMESAT_API_SECRET }}
          NASA_EARTHDATA_USER: ${{ secrets.NASA_EARTHDATA_USER }}
          NASA_EARTHDATA_PWD: ${{ secrets.NASA_EARTHDATA_PWD }}
        with:
          image: quay.io/edsbook/${{ steps.read_action_js.outputs['project.id'] }}:latest
          options: --user root -v ${{ github.workspace }}:/tmp -e EUMESAT_API_KEY -e EUMESAT_API_SECRET -e NASA_EARTHDATA_USER -e NASA_EARTHDATA_PWD
          shell: bash
          run: |
            v=$(jupyter kernelspec list | awk '{print $1}' | egrep ${{ steps.read_action_js.outputs['project.jupyter.binder.kernelName'] }})
            jupyter-nbconvert --to notebook --ExecutePreprocessor.kernel_name="$v" --inplace --execute ${{ steps.read_action_js.outputs['project.toc.1.file'] }}
            cp ${{ steps.read_action_js.outputs['project.toc.1.file' ]}}  /tmp
      - name: Commit
        run: |
          ls
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add ${{ steps.read_action_js.outputs['project.toc.1.file'] }}
          git commit -m 'update'
      - name: Push (render)
        if: contains(github.ref, 'main')
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'render'
          force: true
      - name: Push (review)
        if: contains(github.ref, 'review')
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'review'
          force: true
      - name: Push (preview)
        if: contains(github.ref, 'postprint')
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'preview'
          force: true
